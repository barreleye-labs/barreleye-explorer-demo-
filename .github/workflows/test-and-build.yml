name: Cypress Test and Docker Build/Push

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.15.0'

      - name: Install dependencies
        run: npm install

      - name: Start the application
        run: npm run dev &
        env:
          CI: true

      - name: Wait for application to be ready
        uses: jakejarvis/wait-action@v0.1.0
        with:
          time: '15' # Adjust this time based on how long your application takes to start

      - name: Run Cypress tests
        run: npm run test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Docker Hub build & push
        if: success()
        run : |
          echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker rmi $(docker images -qa)
          # 명확한 이미지 이름과 태그 지정
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:1.0.0 .
          docker images
          # 명확한 이미지 이름과 태그 지정
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:1.0.0
          
      - name: Deploy on EC2 instance
        if: success()
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > key.pem
          chmod 400 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.EC2_IP_ADDRESS }} -t << 'EOF'
            echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            docker ps -a
            sudo docker stop ${{ secrets.DOCKER_REPO }} || true
            sudo docker rm ${{ secrets.DOCKER_REPO }} || true
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest
            sudo docker run -d --name ${{ secrets.DOCKER_REPO }} ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest
            sudo docker ps -a
            sudo chmod +x ./barreleyescan.sh
            sudo ./barreleyescan.sh
          EOF
